"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[788],{5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},517:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7378);function r(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},637:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(5773),r=n(7378),i=n(6457),o=n(1429),l=n(8944),s="tabItem_WhCL";function p(e){var t,n,i,p=e.lazy,c=e.block,u=e.defaultValue,m=e.values,d=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,o.duplicates)(g,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===u?u:null!=(t=null!=u?u:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=k[0])?void 0:i.props.value;if(null!==f&&!g.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,o.useTabGroupChoice)(),y=v.tabGroupChoices,N=v.setTabGroupChoices,j=(0,r.useState)(f),w=j[0],C=j[1],T=[],E=(0,o.useScrollPositionBlocker)().blockElementScrollPositionUntilNextRender;if(null!=d){var x=y[d];null!=x&&x!==w&&g.some((function(e){return e.value===x}))&&C(x)}var P=function(e){var t=e.currentTarget,n=T.indexOf(t),a=g[n].value;a!==w&&(E(t),C(a),null!=d&&N(d,a))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=T.indexOf(e.currentTarget)+1;n=T[a]||T[0];break;case"ArrowLeft":var r=T.indexOf(e.currentTarget)-1;n=T[r]||T[T.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},h)},g.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return T.push(e)},onKeyDown:S,onFocus:P,onClick:P},i,{className:(0,l.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),p?(0,r.cloneElement)(k.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function c(e){var t=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},6873:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return k},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return d}});var a=n(5773),r=n(808),i=(n(7378),n(5318)),o=n(637),l=n(517),s=["components"],p={title:"Emoji picker"},c=void 0,u={unversionedId:"exts/emoji-picker",id:"exts/emoji-picker",title:"Emoji picker",description:"A React based emoji picker powered by Interweave and",source:"@site/docs/exts/emoji-picker.mdx",sourceDirName:"exts",slug:"/exts/emoji-picker",permalink:"/docs/exts/emoji-picker",editUrl:"https://github.com/milesj/interweave/edit/master/website/docs/exts/emoji-picker.mdx",tags:[],version:"current",frontMatter:{title:"Emoji picker"},sidebar:"docs",previous:{title:"Emojis",permalink:"/docs/exts/emoji"},next:{title:"Composition",permalink:"/docs/compose"}},m={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Allow and block lists",id:"allow-and-block-lists",level:2},{value:"Commonly used",id:"commonly-used",level:2},{value:"Changing appearance",id:"changing-appearance",level:2},{value:"Customizing icons",id:"customizing-icons",level:2},{value:"Customizing styles",id:"customizing-styles",level:2},{value:"Translating messages",id:"translating-messages",level:2}],h={toc:d};function k(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A React based emoji picker powered by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave"},"Interweave")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://emojibase.dev"},"Emojibase"),". Supports the following features:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Customizable theme, styles, and icons."),(0,i.kt)("li",{parentName:"ul"},"Configurable element and render order."),(0,i.kt)("li",{parentName:"ul"},"Localized emoji labels and annotations."),(0,i.kt)("li",{parentName:"ul"},"Emoji grouping and categorization."),(0,i.kt)("li",{parentName:"ul"},"Multi-word deep search."),(0,i.kt)("li",{parentName:"ul"},"Skin tone palette selector."),(0,i.kt)("li",{parentName:"ul"},"Variation gallery selector."),(0,i.kt)("li",{parentName:"ul"},"Enlarged preview on hover."),(0,i.kt)("li",{parentName:"ul"},"Emoticons and shortcodes."),(0,i.kt)("li",{parentName:"ul"},"Recently and frequently used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bvaughn/react-window"},"Virtualized rendering"),"."),(0,i.kt)("li",{parentName:"ul"},"And much more!")),(0,i.kt)("img",{src:"/img/slack.png",height:"350"})," ",(0,i.kt)("img",{src:"/img/twitter.png",height:"350"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave/blob/master/tests/slack.css"},"Slack")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave/blob/master/tests/twitter.css"},"Twitter")," themes provided as\nan example of the library's robustness.")),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"React 16.8+ / 17+"),(0,i.kt)("li",{parentName:"ul"},"Interweave + Emoji"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://emojibase.dev"},"Emojibase"))),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add interweave interweave-emoji interweave-emoji-picker emojibase\n"))),(0,i.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install interweave interweave-emoji interweave-emoji-picker emojibase\n")))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"To utilize the emoji picker, import and render the ",(0,i.kt)("inlineCode",{parentName:"p"},"<EmojiPicker />")," component. The picker renders\nin place, so any positioning or display toggling should be done manually."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { EmojiPicker } from 'interweave-emoji-picker';\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker emojiSize={24} emojiLargeSize={48} emojiPath={getSvgPathForEmoji} />\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/docs/exts/emoji#displaying-svgs-or-pngs"},"sizing and path emoji props")," are required. View the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave/blob/master/packages/emoji-picker/src/Picker.tsx"},"TypeScript interface"),"\nfor a list of all available props."),(0,i.kt)("h2",{id:"allow-and-block-lists"},"Allow and block lists"),(0,i.kt)("p",null,"Sometimes specific emojis should not be used, like the poop emoji. This can easily be achieved with\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"blockList")," prop, which accepts an array of hexcodes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker\n    blockList={[\n        '1F4A9', // poop\n        '1F52B', // gun\n    ]}\n/>\n")),(0,i.kt)("p",null,"The inverse, the ",(0,i.kt)("inlineCode",{parentName:"p"},"allowList")," prop, can be used for situations where a restricted list of emojis\nshould ",(0,i.kt)("em",{parentName:"p"},"only")," be used. This also accepts an array of hexcodes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"// Only trees\n<EmojiPicker\n    allowList={[\n        '1F332', // evergreen\n        '1F333', // deciduous\n        '1F334', // palm\n        '1F384', // christmas\n        '1F38B', // tanabata\n    ]}\n/>\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Not sure where to find a hexcode? Dig around ",(0,i.kt)("a",{parentName:"p",href:"https://emojibase.dev"},"Emojibase"),".")),(0,i.kt)("h2",{id:"commonly-used"},"Commonly used"),(0,i.kt)("p",null,'When an emoji is selected (clicked on), we keep a history known as "commonly used", and display a\ncustom group within the emoji list. This history has two modes, recently used and frequently used,\nand can be customized with the ',(0,i.kt)("inlineCode",{parentName:"p"},"commonMode")," prop. Selected emojis that fall past the\n",(0,i.kt)("inlineCode",{parentName:"p"},"maxCommonlyUsed")," prop are trimmed from the history."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"recently-used")," - Tracks selected emojis from most recently selected to oldest."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"frequently-used")," - Tracks selected emojis using a counter, in descending order.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<EmojiPicker commonMode="frequently-used" />\n')),(0,i.kt)("p",null,"The commonly used feature can be disabled with the ",(0,i.kt)("inlineCode",{parentName:"p"},"disableCommonlyUsed")," prop."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Commonly used emojis are stored in local storage.")),(0,i.kt)("h2",{id:"changing-appearance"},"Changing appearance"),(0,i.kt)("p",null,"This picker is quite customizable, if not the most customizable, when it comes to its visual\nappearance. Every aspect of the picker can be changed, whether it be the order of elements, hiding\nor showing elements, the number of emojis to render, and more. I'll try to keep this rather short."),(0,i.kt)("p",null,"To change the number of visible emojis rendered in the list, define the ",(0,i.kt)("inlineCode",{parentName:"p"},"columnCount")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rowCount"),"\nprops."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker columnCount={15} rowCount={5} />\n")),(0,i.kt)("p",null,"To change the default selected group tab or skin tone palette, define the ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultGroup")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"defaultSkinTone")," props respectively."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<EmojiPicker defaultGroup="food-drink" defaultSkinTone="medium" />\n')),(0,i.kt)("p",null,"By default, the picker renders elements in the following order: emoji being hovered preview at the\ntop, followed by the list of emojis, the search bar, and the group tabs. This order can be changed\nwith the ",(0,i.kt)("inlineCode",{parentName:"p"},"displayOrder")," prop, which accepts an array of strings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker displayOrder={['groups', 'search', 'emojis', 'preview']} />\n")),(0,i.kt)("p",null,"To disable one of the elements mentioned previously, pass a ",(0,i.kt)("inlineCode",{parentName:"p"},"disableGroups"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"disablePreview"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"disableSearch"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"disableSkinTones")," prop."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker disableSearch disableSkinTones />\n")),(0,i.kt)("p",null,"To hide emoticons or shortcodes within the preview, pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"hideEmoticon")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"hideShortcodes"),"\nprops. Furthermore, to hide group headers (but still use group tabs), pass ",(0,i.kt)("inlineCode",{parentName:"p"},"hideGroupHeaders"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker hideEmoticon hideGroupHeaders />\n")),(0,i.kt)("h2",{id:"customizing-icons"},"Customizing icons"),(0,i.kt)("p",null,"To customize the icons displayed in the group tabs, pass an object of nodes to the ",(0,i.kt)("inlineCode",{parentName:"p"},"groupIcons"),"\n(",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave/blob/master/packages/emoji-picker/src/constants.ts#L58"},"list"),")\nprop. By default the picker uses native emoji but can render React components."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker\n    groupIcons={{\n        activities: <IconBasketball />,\n    }}\n/>\n")),(0,i.kt)("h2",{id:"customizing-styles"},"Customizing styles"),(0,i.kt)("p",null,"The picker is not styled by default as it allows consumers to easily customize the CSS to match\ntheir application. There are 2 approaches to styling the picker, the first by writing CSS that\nfollows the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave/blob/master/packages/emoji-picker/src/constants.ts#L101"},"class names provided by Interweave"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".interweave-picker__picker {\n    position: 'absolute';\n    bottom: 100%;\n}\n")),(0,i.kt)("p",null,"The second by writing CSS and passing an object of custom class names to the ",(0,i.kt)("inlineCode",{parentName:"p"},"classNames")," prop. This\napproach enables non-standard solutions, like CSS modules and CSS-in-JS."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker\n    classNames={{\n        picker: 'picker-7sa92dsd',\n    }}\n/>\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"emojiPadding")," prop is an exception to the CSS pattern, as it pads the emoji button using inline\nstyles. This is necessary for accurately computing of widths and heights."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker emojiPadding={5} />\n")),(0,i.kt)("h2",{id:"translating-messages"},"Translating messages"),(0,i.kt)("p",null,"Localization is important, and thus, all messages within the picker can be translated with the\n",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," prop. This prop accepts an object of message keys to translated strings. The list of\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/interweave/blob/master/packages/emoji-picker/src/constants.ts#L132"},"available messages can be found here"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<EmojiPicker\n    locale=\"ja\"\n    messages={{\n        search: '\u30b5\u30fc\u30c1',\n    }}\n/>\n")))}k.isMDXComponent=!0}}]);